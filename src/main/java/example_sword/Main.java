package example_sword;

//// 문제 : `무기 a무기 = new 칼();` 가 실행되는 세부과정을 자세히 쓰세요.
//
//class Main {
//    public static void main(String[] args) {
//        // * double d = 5.5; 의 처리과정
//        // 1 : 실수 5.5가 생긴다.
//        // 2 : 오직 실수만 담을 수 있는 변수 d가 생성된다.
//        // 3 : d는 5.5가 자신안에 들어 올 수 있는지 판단한다.(가능)
//        // 4 : d변수에 실수 5.5가 들어간다.
//        double d = 5.5;
//
//        // * double dd = 5; 의 처리과정
//        // 1 : 정수 5가 생긴다.
//        // 2 : 오직 실수만 담을 수 있는 변수 dd가 생성된다.
//        // 3 : dd는 5가 자신안에 들어 올 수 있는지 판단한다.
//        // 4 : 5는 정수이기 때문에 들어 올 수 없다고 판단한다.(불가능)
//        // 5 : dd가 아쉬워하는 5에게 이렇게 이야기 합니다. `니가 실수로 변환될 수 있다면 들어올 수 있다.`
//        // 6 : 5는 자신의 형태를 버리고 실수화 한다. 즉 5.0으로 변신하다.(캐스팅, 또는 형변환)
//        // 7 : dd로 5.0이 들어간다.
//        double dd = 5;
//
//        // * int i = 5.5; 의 처리과정
//        // 1 : 실수 5.5가 생긴다.
//        // 2 : 오직 정수만 담을 수 있는 변수 i가 생성된다.
//        // 3 : i는 5.5가 자신에게 담길 수 있는지 체크한다.(불가능)
//        // 4 : i는 아쉬워하는 5.5에게 이렇게 이야기 합니다. `니가 정수가 된다면 들어올 수 있다.`
//        // 5 : 5.5는 도저히 불가능 요구를 받고 치명적인 에러를 발생시킨다.(캐스팅 불가능 으로 인한 에러)
//        //int i = 5.5;
//
//
//        무기 a무기 = new 칼();
//
//        // * 무기 a무기 = new 칼(); 의 처리과정
//        // 1: 칼이라는 객체가 새롭게(new) 생성된다.
//        // 2: "무기"라는 타입에 속해있는 변수 a무기가 있다.
//        // 3: a무기는 칼에게 네가 무기 리모컨(타입)에 속해있다면 자신과 연결할 수 있다고 한다.
//        // 4: 하지만 칼은 위에서 보이듯 무기 리모컨과 아무런 연관이없다.(오류, 실행 안됨)
//        // if: 만약 칼이 무기를 부모 객체로 쓴다면 오류는 나지 않는다.
//
//    }
//}
//
//class 무기 {
//
//}
//
//class 칼 {
//
//}

// 문제 : 매개변수를 사용해서 전사가 매번 다르게 공격하도록 해주세요.

class Main {
    public static void main(String[] args) {
        전사 a전사 = new 전사();

        a전사.공격("브라이언", "칼");
        // 브라이언이(가) 칼(으)로 공격합니다.

        a전사.재공격("브라이언", "칼");
        // 브라이언이(가) 칼(으)로 공격합니다.

        a전사.공격("필립", "창");
        // 필립이(가) 창(으)로 공격합니다.

        a전사.공격("마크", "지팡이");
        // 마크(가) 지팡이(으)로 공격합니다.

        a전사.재공격("마크", "지팡이");
        // 마크(가) 지팡이(으)로 공격합니다.

        a전사.재공격("마크", "지팡이");
        // 마크(가) 지팡이(으)로 공격합니다.
    }
}

class 전사 {
    void 공격(String name, String weapon) {
        System.out.println(name+"이(가) "+weapon+"(으)로 공격합니다.");
    }
    void 재공격(String name, String weapon) {
        System.out.println(name+"이(가) "+weapon+"(으)로 공격합니다.");
    }
}